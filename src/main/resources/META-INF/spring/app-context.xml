<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
						http://www.springframework.org/schema/cache
						http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">

	<description>Example configuration to get you started.</description>

	<context:component-scan base-package="com.spring.mti.*" />
	<cache:annotation-driven />
	
	<bean id="persistenceAnnotation"  
	  class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	
	<!-- 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="jdbc:postgresql://localhost/test"/>
		<property name="username" value="postgres"/>
		<property name="password" value="postgres"/>
	</bean>
	 -->

	 <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
     	<property name="persistenceXmlLocations">
   			<list value-type="java.lang.String">
    			<value>classpath*:META-INF/persistence.xml</value>
   			</list>
  		</property>
	</bean>
	
	<bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		  <property name="persistenceUnitManager" ref="persistenceUnitManager" /> 
		      <property name="persistenceUnitName" value="JPA_POSTGRES" /> 
			  <!--  <property name="dataSource" ref="dataSource"/> -->
	</bean>
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
        <!--  <property name="dataSource" ref="dataSource"/> -->
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <jpa:repositories base-package="com.spring.mti.repository" entity-manager-factory-ref="emf" transaction-manager-ref="transactionManager" />
    
   <!-- Beans -->
   <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"/>
   <bean id="userDao" class="com.spring.mti.dao.UsersDaoImpl" />
   <bean id="users" class="com.spring.mti.model.security.Users" />
   <bean id="roleDao" class="com.spring.mti.dao.RoleDaoImpl" />
   <bean id="categoryDao" class="com.spring.mti.dao.CategoryDaoImpl" />
   <bean id="cityDao" class="com.spring.mti.dao.address.CityDaoImpl" />
   <bean id="countryDao" class="com.spring.mti.dao.address.CountryDaoImpl" />
   <bean id="regionDao" class="com.spring.mti.dao.address.RegionDaoImpl" />
   <bean id="departmentDao" class="com.spring.mti.dao.DepartmentDaoImpl" />
   <bean id="employeDao" class="com.spring.mti.dao.EmployeDaoImpl" />
   <bean id="answerDao" class="com.spring.mti.dao.AnswerDaoImpl" />
   <bean id="QuestionDao" class="com.spring.mti.dao.QuestionDaoImpl" />
   <bean id="testKnowledgeDao" class="com.spring.mti.dao.TestKnowledgeDaoImpl" />
   <bean id="relTestQuestionDao" class="com.spring.mti.dao.RelTestQuestionDaoImpl" />
   <bean id="certificationDao" class="com.spring.mti.dao.CertificationDaoImpl" />
   <bean id="certificationStateDao" class="com.spring.mti.dao.CertificationStateDaoImpl" />
   <bean id="relCertificationEmployeDao" class="com.spring.mti.dao.RelCertificationEmployeDaoImpl" />
   <bean id="serviceCertification" class="com.spring.mti.service.CertificationServiceImpl" />
   <bean id="serviceDictionary" class="com.spring.mti.service.DictionaryServiceImpl" />
   <bean id="serviceLayout" class="com.spring.mti.service.LayoutServiceImpl" />
   <bean id="serviceKnowledges" class="com.spring.mti.service.KnowledgesServiceImpl" />
   <!-- <bean id="authoritiesDao" class="com.spring.mti.dao.AuthoritiesDaoImpl" />  -->
    
   <!-- 
   <bean id="serviceAuth" class="com.spring.mti.service.AuthorityServiceImpl">
   		<property name="authDao" ref="authoritiesDao" /> 	
   </bean>
    -->
    <!-- Security -->   
   <!--  <bean id="userDetailsService" class="com.spring.mti.service.UserDetailsServiceImpl" /> -->
   
   <bean id="saltSource"     class="org.springframework.security.authentication.dao.ReflectionSaltSource"> 
   		<property name="userPropertyToUse" value="username"/>
   	</bean>
   
   <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
   
   <!--  <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"> -->
  	<bean id="userDetailsService" class="com.spring.mti.service.UserDetailsServiceImpl"> 
  		<property name="dao" ref="userDao" />	
  		<!-- <property name="dataSource" ref="dataSource"/> 
  		<property name="usersByUsernameQuery" value = "select username,password, enabled from users where username=?"/>
  		<property name="authoritiesByUsernameQuery" value ="select u.username, ur.authority from users u, authorities ur where u.id = ur.username and u.username =?" />
		-->
	</bean>
	
	<bean id="serviceRole" class="com.spring.mti.service.AuthorityServiceImpl" />
	<bean id="serviceAddress" class="com.spring.mti.service.AddressServiceImpl" />
   
    <bean id="daoAuthenticationProvider"
  		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  		<!-- <property name="userDetailsService" ref="inMemoryDaoImpl" />  -->
  		<property name="userDetailsService" ref="userDetailsService"/> 
  		<property name="saltSource" ref="saltSource"/>  
  		<property name="passwordEncoder" ref="passwordEncoder"/>
	</bean>
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
 		 <property name="providers">
    		<list>
      			<ref local="daoAuthenticationProvider"/>
    		</list>
  		</property>
	</bean> 
	<!-- 
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
         <property name="caches">
             <set>
                 <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
                     <property name="name" value="default"/>
                 </bean>
             </set>
         </property>
     </bean>
	 -->
	 <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="country"/>
			</set>
		</property>
	</bean>
</beans>